元组式不可改变的序列容器，同list一样，元组可以存入任意类型数据
	表示方法：
		用小括号() 括起来， 单个元素括起来后加逗号，区分单个对象还是元组
	创建空元组：
		t = ()
	创建非空元组：
		t = 200,
		t = (20,)
		t = (1,2,3)
		t = 100,200,300
	注：
		type（x） 函数可以返回x的类型
	元组创建错误的示例：
		t = (20)   #t 绑定20这个对象，不是元组
		x,y,z = 100,200,300  #序列赋值，不是元组
		x,y,z = (100,200,300) #序列赋值，不是元组
		x,y,z = "abc" #序列赋值，不是元组
	元组的构造函数：
		tuple()  生成一个空的元组，等同于()
		tuple(iterable) 用可迭代对象生成一个元组
		示例：
			t = tuple()  # t 绑定一个空元组，等用于 t =()
			t = tuple(range(1,10,3))  # t =(1,4,7)
			t = tuple("abc")   #t = ('a','b','c')
	元组的运算：
		算数运算：
		 + += * *=
		 示例：
			t1 = (1,2,3)+(4,5,6)
			t1 += (7,8,9)
			t2 = (1,2)*3
			t2 *= 2
		比较运算
			< <= > >= == !=
			注：元组的比较规则和列表的比较规则完全相同：
			示例：
				(1,2,3)<(1,2,4)  #True
				("ABC",456)>("123",789)  #True
				(1,"二")>("二",1)   #出错 typeError
		in  和 not in  运算符
			判断一个值是否存在与元组中 ，如果是 返回True ，否则返回False
			规则和列表的in 和not in 规则相同
			示例：
				x = (1,'two',3)
				2 in x #False
				2 not in x #True
				3 in x  # True
		[] 运算符
			索引 index 用法等用于 列表的索引， 元组不支持索引赋值操作
			切片 slice	用法等同于列表的切片，元组不支持切片赋值
			示例：
				x = (1,2,3,4,5,6)
				print(x[0]) #1
				print(x[1::2]) #(2,4,6)
元组的方法 ：
1、t.index[v[,begin[,end]]]  返回对应元组的索引下标，当v不存在时，触发VlaueError错误
2、t.count(x)     返回元组中对应的元素的个数
	
