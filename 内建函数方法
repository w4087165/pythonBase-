数值对象的构造(创建)函数
函数	说明
float(obj)	用字符串或数字转换为浮点数, 如果不给出参数，则返回0.0
int(x, base=10)
int(x=0)	用数字或字符串转换为整数,如果不给出参数，则返回0
complex(r=0.0, i=0.0)	用数字创建一个复数(实部为r,虚部为i)
bool(x)	用x获取一个布尔值(True/False)
预置(内建)的数值型函数
函数	说明
abs(x)	取x的绝对值
round(number[, ndigits])	对数值进行"四舍五入", ndigits是小数向右
取整的位数, 负数表示向左取整
pow(x, y, z=None)	相当于x ** y 或 x**y % z
help() 查看函数帮助：
help函数
>>> help(abs)  # 查看abs函数的帮助
基本输入输出
基本输入 input
函数	说明
input('提示字符串')	返回输入的字符串(仅Python3,'提示字符串' 可以是空)
基本输出函数 print
函数	说明
print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)	将一系列的值以字符串形式输出到
标准输出设备上,默认为终端.
参数选项
选项的关键字参数为:
sep:   两个值之间的分隔符，默认为一个空格' '
end:   输出完毕后在流末尾自动追加一个字符串,默认为换行符'\n'
file:  流对象，默认为sys.stdout.
flush: 是否立即将流进行输出
字符编码转换函数
函数	说明
ord(c)	返回一个字符c的Unicode编码值
chr(i)	返回i这个值所对应的 字符
整数转换为字符串函数
函数	说明
bin(i)	将整数转换为二进制字符串
oct(i)	将整数转换为八进制字符串
hex(i)	将整数转换为十六进制字符串
字符串构造函数
函数	说明
str(obj='')	将对象转换为字符串
range()函数
函数	意义
range(stop)	用来生成 0 ~ stop 区间内的整数,直到stop为止（不包含stop)
range(start,stop[,step])	用来生成start~stop区间内的整数,直到stop为止,每个整数间隔step，直到stop为止（不包含stop，且step可以是负整数)
格式:
(见:help(range))

列表的构造(创建)函数list
函数	说明
list()	# 生成一个空的列表 等同于 []
list(iterable)	# 用可迭代对象创建一个列表
Python3中常用的序列函数
函数	说明
len(seq)	返回序列的长度
max(x)	返回序列的最大值的元素
min(x)	返回序列的最小值的元素
------以上是以前学的---------	
sum(x)	返回序列中所有元素的和(元素必须是数值类型)
any(x)	真值测试，如果列表中其中一个值为真值则返回True
all(x)	真值测试，如果列表中所有值为真值则返回True
reversed(seq)	返回原序列反向顺序的可迭代对象
sorted(iterable, reverse=False)	返回已排序对象的
str(obj)	将对象obj序列化为一个字符串
list(iterable)	用可迭代对象生成一个列表
tuple(iterable)	用可迭代对象生成一个元组
元组的构造(创建)函数tuple
函数	说明
tuple()	生成一个空的元组，等同于 ()
tuple(iterable)	用可迭代对象生成一个元组
dict的构造(创建)函数dict
函数	说明
dict()	# 生成一个空的字典 等同于 {}
dict(iterable)	用可迭代对象初始化一个字典
dict(**kwargs)	关键字传参形式生成一个字典
集合构造(创建)函数 set
函数	说明
set()	创建一个空的集合对象(不能用{}来创建空集合)
set(iterable)	用可迭代对象创建一个新的集合对象
固定集合构造(创建)函数 frozenset
函数	说明
frozenset()	创建一个空的固定集合对象
frozenset(iterable)	用可迭代对象创建一个新的固定集合对象
globals() / locals() 函数
函数	说明
globals()	返回当前全局作用域内变量的字典
locals()	返回当前局部作用域内变量的字典
eval(), exec() 函数
函数	说明
eval(source, globals=None, locals=None)	把一个字符串source当成一个表达式来执行，返回表达式执行后的结果
exec(source, globals=None, locals=None)	把一个字符串source当成程序来执行．
高阶函数 High Order Function
函数	说明
map(func, iterable, ...)	返回一个可迭代对象，此可迭代对象用
函数func对可迭代对象iterables中的每一个元素作为参数计算后得到结果;
当最短的一个可迭代对象不再提供数据时此可迭代对象生成结束
filter(function, iterable)	返回一个可迭代器对象，此可迭代对象将对iterabler获取到的数据
用函数function 进行筛选.function将对iterable中的每个元素进行求值，
返回False则将此数据丢弃，返回True，则保留此数据
sorted(iterable,
key=None,
reverse=False)	返回一个新的包含有所有可迭代对象中数据升序排序的列表
iterable 可迭代对象
key 函数是用来提供一个值,这个值将作为排序的依据
reverse 标志用来设置是否降序排序
dir函数
函数	说明
dir([对象])	返回一个字符串列表
dir函数作用
如果没有参数调用，则返回当前作用域内的所有变量的列表
如果给定一个对象作为参数，则返回这个对象的所有变量的列表
对于一个模块,返回这个模块的全部变量
对于一个类对象，返回类对象的所有变量，并递归的基类对象的所有变量
对于其它对象返回所有变量、类变量和基类变量
迭代器函数iter和next
函数	说明
iter(iterable)	从可迭代对象中返回一个迭代器,iterable必须是能提供一个迭代器的对象
next(iterator)	从迭代器iterator中获取下一个记录，如果无法获取一下条记录，则触发 StopIteration 异常
迭代工具函数
迭代工具函数的作用是生成一个个性化可迭代对象
函数	说明
zip(iter1 [,iter2 [...]])	返回一个zip生成器对象, 此对象用于生成一个元组，此元组的数据分别来自于参数中每个可迭代对象,生成元组的个数由最小的可迭代对象大小决定
enumerate(iterable, start=0)	返回一个enumerate生成器对象，此对象生成类型为(索引,值对)的元组,
默认索引从零开始，也可以用start指定
字节串的构造函数bytes
函数	说明
bytes()	# 生成一个空的字节串 等同于 b''
bytes(整型可迭代对象)	# 用可迭代对象初始化一个字节串
bytes(整数n)	生成n个值为0的字节串
bytes(字符串, encoding='utf-8')	用字符串的转换编码生成一个字节串
字节数组的构造函数 bytearray
函数	说明
bytearray()	创建空的字节数组
bytearray(整数)	用可迭代对象初始化一个字节数组
bytearray(整型可迭代对象)	生成n个值为0的字节数组
bytearray(字符串, encoding='utf-8')	用字符串的转换编码生成一个字节数组
文件的打开函数
字符	含义
open(file, mode='rt')	用于打开一个文件，返回此文件流对象. 
如果打开文件失败，则会触发OSError 错误! 
如果要打开的文件不存在，则会触发FileNotFoundError 错误!
用于类的函数
函数	说明
isinstance(obj, class_or_tuple)	返回这个对象obj 是否是 某个类的对象,或者某些类
中的一个类的对象,如果是返回True,否则返回False
type(obj)	返回对象的类型
super函数
函数	说明
super(cls, obj)	返回绑定超类的实例(要求obj必须为cls类型的实例)
super()	返回绑定超类的实例,等同于:super(class, 实例方法的第一个参数)，必须用在方法内调用
用于类的函数
函数	说明
issubclass(cls, class_or_tuple)	判断一个类是否继承自其它的类,如果此类cls是class 或 tuple中的一个派生子类则返回True,否则返回False
对象的属性管理函数
函数	说明
getattr(obj, name[, default])	从一个对象得到对象的属性；getattr(x, 'y') 等同于x.y; 当属性不存在时,如果给
出default参数,则返回default,如果没有给出default 则产生一个AttributeError错误
hasattr(obj, name)	用给定的name返回对象obj是否有此属性,此种做法可以避免在getattr(obj, name)时引发错误
setattr(obj, name, value)	给对象obj的名为name的属性设置相应的值value, setattr(x, 'y', v) 等同于 x.y = v
delattr(obj, name)	删除对象obj中的name属性, delattr(x, 'y') 等同于 del x.y
对象的属性管理函数示例:
class Dog:
    pass
d = Dog()
d.color = '白色'
v = getattr(d, 'color')   # 等同于 v = d.color
v = getattr(d, 'kinds')  # 出错,没有d.kinds属性
v = getattr(d, 'kinds', '没有这个属性')  # v= '没有这个属性'
hasattr(d, 'color')  # True
hasattr(d, 'kinds')  # False
setattr(d, 'kinds', '京巴')  # 等同于d.kinds ='京巴'
hasattr(d, 'kinds')  # True
delattr(d, 'kinds')  # 等同于 del d.kinds
hasattr(d, 'kinds')  # False
