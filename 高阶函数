函数变量：
	函数名是变量，他在创建函数时绑定一个函数：
	示例：
	def  f1():
		print('f1函数被调用')
	f2 = f1
	f2()  #???
	f1()  #???
一个函数可以作为另一个函数的实参传递
def f1():
	print('f1被调用')
def f2():
	print('f2被调用')
def fx():
	print(f1())
fx()  #f1被调用
       None
 
函数可以作为另一个函数的返回值
函数的嵌套定义
	函数嵌套定义时指一个函数里调用def语句来创建其他函数的情况
	示例：
python 的作用域
	python 中的四个作用域：  LEGB
	作用域             		   英文解释						        英文翻译
局部作用域					          local							          L
外部嵌套函数作用域			      enclosing function locl  		E
函数定义所有模块的作用域	   global（module）				     G
python 内置模块的作用域		   builtin（python）			     B
示例见：
变量名的查找规则：
	在访问变量时，先查找本地变量，然后时包裹其函数外部的函数内部的变量，之后是全局
	变量。最后时内置变量
	即 ： L --》E--》G--》B
	在默认的情况下，变量名赋值会创建或这改变本地作用域的变量
global 语句：
	作用：
		告诉解释器，global语句声明的一个或多个变量，这些变量的作用域为模块
		级的作用域，也称作全局作用域
	说明：
		global 全局声明将赋值变量映射到模块文件内部的作用域发：
	global 变量1，变量2
	示例：
		global A,C,b
		gloable d
	示例见：
		global.py
	v = 100
	def f1():
		gloable v
		v = 200
	f1()
	print("v=",v)
gloable 说明：	
	全局变量如果要在函数内部被赋值，则必须经过全局声明
	2、全局变量函数6内搜索生成可以访问取值，但不能通过赋值改变俩个绑定关系
	3.不能实色嗯门口，在用g比较符合
	4.global变量列表里的变量名｝
nonlocal 语句：
	作用：告诉解释器， nonlocal声明的变量不是局部变量，也不是全局变量而是外部
	嵌套函数的变量
	语法：
		nonlocal 变量名1，变量名2....
	示例见：
		nonlocal.py
	说明：
		nonlocal 语句只能在被嵌套函数的内部进行使用
		2.对nonlocal 变量进行赋值将对外不嵌套函数作用域内的变量进行操作
		3.当有俩层或俩层以上函数嵌套时，访问nonlocal变量只能对最近一层的
		的变量进行操作
		4.nonlocal 语句的变量列表里的变量名，不能声明为nonlocal变量
def 语句的作用是：
	创建函数，然后用函数名绑定这个语句块
