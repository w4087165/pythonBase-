比较运算符
	<  小于   
	<=  小于等于
	>  大于
	>= 大于等于 
	== 等于
	!= 不等于
	
	语法：
		左表达式 < 右表达式
	说明：
		比较运算符返回布尔类型 的值
	实例：
		100 < 200  返回True
		100 >= 200  返回False
		1 + 5 == 2 + 4  比较运算符 优先级比+-*/低  
	比较运算符的数学表示
		0<= 100 <= 200  
		x = 98
		0 <= x <= 100  True
		0 <= x >= 20  True
	数据对象的构造（创建）函数
		int(x,base =10)
		int(x = 0 )
		用数字或字符串转换为整数，如果不给出参数则返回0.
		float(obj) 用字符串或数字转化成浮点数 如果不给出参数则返回0
		则返回0
		complex(r=0.0, i=0.0)
		用数字创建一个复数（实部为r，虚部为i）
		bool(x) 用x 获取一个布尔型（True/False）
	函数调用：
		函数名（传参列表）
		说明：
			函数调用时一个表达式。一定会返回一个对象的引用关系（或者返回None）
	示例：
		x = int(3.14) # 将3.14 转换为整数
		x = int()     # 等用于 x = 0
		x = int（“23”）#x绑定 23这个数字
		x = int("123",16) # x=291 字符串“123” 表示 16进制数 转换成10进制整数   
    
	  bool(x) 返回假值得情况:
		bool(x) 用于显示获取x的布尔值
		值    	说明：
	  None		空值
	  False 	布尔值假
	  0，0.0，0j  所有数字零
	  "" 空字符
	  （） 空元组
	  []  空列表
	  ｛｝ 空字典
	  set（） 空集合
	  3.14 浮点数  转化成二进制 无限循环 
		浮点数 ：不会用等号运算符 	浮点数 会损失精度
		通常会比较大小
			0.000000001< 0.00005 - 0.0000051 <0.000001
			
			
	预置内建的数值型函数
		abs(x)   取绝对值
		round(number[,ndigits])  对数值进行取近似值（四舍五入）
						ndigits 是小数向右取整的位数，负数表示想做取整、
    round函数 在处理.5 时 会向偶数方偏移
    如 round(2.5)   # 返回2
       round(3.5)   # 返回4
		pow(x,y,z-None) 相当于 x**y 或 x**y%z
		help（）
			函数查看帮助
	函数调用 也是 表达式
	语句 statements
	语句 是由一些表达式组成的。通常一条语句可有独立执行来完成一部分事情并形成结果
	一条语句建议写在一行内，多条语句写在一行内需要用分号；分隔
	实例：
		x = 100 + 200
		print("x = ",x)
		写在一起为：
		x = 100+ 200 ;print("x=",x)
	显示换行  
		折行符 \ 
		折行符必须放在一行的末尾来示意解释执行，下一行也是本行的语句
		实例：
			x = 1+5+56+6+4+\
				4+5+6
	隐式换行
		所有的括号内的内容换行，称为隐实换行
		括号：
			() [] {}
	基本输入输出函数
		基本输入函数 input
		作用:  从标准输入设备上读取一个字符串：
			末尾的换行符会被删除
		格式：
			input（“提示字符串”）
		返回值：
			用户输入的字符串
		说明：
			'提示字符串' 可以为空
		print(value,....,sep='',end='\n',flush =False)
		作用：
			将一系列数值以字符串形式输出到标准输出设备上，默认为终端关键参数
			sep： 俩个值之间的分隔符，默认为一个空格
			end，输出完毕后在字符串尾部自动最佳一个字符串，默认为换行符"\n"
			flush: 是否立即输出到终端上（默认不立即输出）
		练习:
			输入俩个整数，分别用变量下x，y绑定
		  x = input('请输入第一个数：')
      y = input('请输入第二个数：')
      
		语句是计算机内最小的执行单位
		
	if语句：
		问题:
		有俩条语句：
			print("是偶数")
			print("是奇数")
			如何只让其中一条语句执行
		作用：
			让程序根据条件选择性的执行某条语句或某些语句
		语法：
			if 真值表达式1：
				语句块
			elif 真值表达式2：
				语句块
			elif 真值表达式3：
				语句块
			else
				语句块4
			说明 
				elif 子句可以有0个，1个或多个
				else 子句可以有0个，，且只能放在if语句的最后
			num = int(input("请输入一个整数："))
			if num % 2 == 0
				print(num,"是偶数")
			else
				print(num,"是奇数")
		if语句的真值表达式：
		if 100:
			print("真")
		if语句的嵌套
			if语句本身是由多个条件语句组成的一个复合语句
			if 语句可以作为语句嵌套到另一个复合语句的内部：
	条件表达式：
		语法：
			表达式1  if 真值表达式 else 表达式2
		作用：
			根据真值表达式的取值  来决定执行表达式1 或 表达式2 并返回结果
	pass 语句
		作用：通常用来填充语法空白：
		语法：
			pass
	布尔运算符:
		运算符  not and or
	布尔非运算：
		not x
		对 x 进行布尔取非， 如bool(x)
		实例：
			not True   #返回False
			not False  #返回True
			not 0<=60 <=100  #返回False
	布尔与操作：
		x and y
		作用：
			*****优先返回假值对象
				
			当x的布尔值为False时，返回x，否则返回y
			0 and 100 # 0
			100 and 0.0 #0.0
	布尔或操作：
		x or y
		作用：优先返回真值对象
	正负号运算符：
		运算符：
			+（正号）
			-（负号）
